sha,message,date,result
90ee341655d4033840819de68c995420735792c1,README.md edited online with Bitbucket,2014-05-21 07:31:11+00:00,FALSE
29adaa41f565124befd49bce464835b5402003f6,README.md edited online with Bitbucket,2014-05-21 07:31:50+00:00,FALSE
7f17f0b4172d19e138a53b48778c57377de8104d,README.md edited online with Bitbucket,2014-05-21 07:33:46+00:00,FALSE
4b635f2dee5cec0bd7f3466e7bd27367a87ca712,"New README, renamed LICENSE file, updated server head.",2016-01-05 18:31:20+01:00,TRUE
c38c2c97b1a9a3692f611eb6297a9b3fb9faefe5,Updating README... forgotten that this is markdown...,2016-01-05 18:44:03+01:00,TRUE
c140ab14609dc978326709d5599988931cad4195,OK one little change.,2016-01-05 18:44:48+01:00,TRUE
dcf75461b689171474fd7feb6105d7f463f96a7c,"Fixes on the README, sorry ;)",2016-01-06 15:09:49+01:00,FALSE
f4ecd5898eea538b330621a681633da057c51bd1,README.md edited online with Bitbucket,2016-02-09 18:16:06+00:00,FALSE
a373849a6186e5a84b5efd70fdb4450604c98c15,Updating README and legal information.,2017-01-10 13:08:35+01:00,TRUE
7850f27a96bc00eed1a91654b3cb81804ba2061f,Renewed and more essential README.md.,2017-10-02 11:09:57+02:00,TRUE
355bb9fe45d2463233940882924da6cc57e3dd9c,dev_appserver.py call fixed.,2017-10-02 11:11:45+02:00,TRUE
6a1913a931872293f41f3b185997e45e767e16c1,Point to english mausbrand.de website,2017-10-02 11:24:40+02:00,FALSE
3b771aab0394dda8610e188f121740e192c70a0b,Updated README.md and CHANGELOG.md,2018-04-05 11:30:03+02:00,TRUE
a7913da402ab2f3a930e7b4d700bd2e7bf4afa50,Adjusting README and CHANGELOG over ViUR modules,2018-04-20 11:49:24+02:00,FALSE
824e2d3cf89bcaf5009176c78e3e26ebc82cea54,changed year to 2019 and use https in url of viur.is,2019-02-18 11:29:27+01:00,FALSE
54ca298069263de5ffefb32fedff9c5e68a77c77,Updated README's getting started section.,2019-05-15 11:56:08+02:00,TRUE
29d07126a46e9cc2991554e8b1577079bb325e57,README.md fixes again,2019-05-15 12:01:08+02:00,TRUE
c9018e8bc1d708e622537906a4b35121c532e0b4,Added warning to README.md,2019-06-08 18:01:13+02:00,FALSE
872fe0c99653a8332fac8c6b40ab983179a401c8,"Update README.md

some grammar corrections, rewording for better understandability",2020-04-07 12:42:10+02:00,TRUE
46e989b06a73a6bc7dfcd2dd0239fde98fe7fb22,"Apply suggestions from code review

changed several links",2020-04-07 14:02:36+02:00,TRUE
3d90611f064f3b6d17d634d8f12b36a31e2b77e1,readthedocs badge,2021-03-12 12:11:03+01:00,FALSE
d727d09f49d8067d0820aa00d5396af6bf52e030,"Update README.md

Removed warnings and changed some wording.",2021-04-08 12:17:17+02:00,TRUE
42113eaba4fb9a7e0016f7835548091d1a35f92c,Updated README.md and CHANGELOG.md,2022-04-14 17:31:48+02:00,TRUE
417f649c12505eeb6569965d03a6850e6a7b62b0,"Release v3.1.0 (#419)

* first package draft

- removed statics
- add inline style to error.html
- allow sha256 to deliver the error.html
- added utils.coreBasePath to reference the package path

* Replaced db.py with a empty proxy to viur.datastore, removed depenencies for viur.core.db

* chore: update dependencies

* added github actions

* Added viur-datastore to requirements.txt

* Replaced calls to KeyClass with Key in tasks.py

* fix: update

* Re-Added translation() jinja2 function

* Fixed allocateIDs, updated viur.datastore to 0.3

* chore: disabled changelog check

* fix: update requirements and  version

* fix: added missing pytz

* Updated viur-datastore to 0.5

* Fixed deleteRecursive function in files

* Fixed ratelimit module

* Fixed running on Python 3.10

* Pass bone.getEmptyValue() in json render structure, handle custom types in CustomJsonEncoder

* Allow setBoneValue setting values to Empty again

* feat: added configureable db engine

- reuse db.py
- added viur.db.engine in conf

* Fixed serializing randomSliceBone

* Updated viur-datastore to 0.6

* Updated changelog

* deleteRecursive function in tree-prototype

* Fixed the new import system, updated viur-datastore to 0.7

* Fixed querying randomSliceBone with new datastore adapter

* Allow configuring the expiration of downloadURLs generated by JSON render

* Correct the response status code

Use the shorter `name` variable of the `HTTPException` instead of the verbose `descr`.
Then we also use the Reason-Phrases suggested in the RFC 7231 Sec. 6.1 (https://datatracker.ietf.org/doc/html/rfc7231#section-6.1).

Test with:
```py
class Index(BasicApplication):
	@exposed
	def testEx(self):
		raise errors.NotFound()
```
and
```sh
curl -I http://localhost:8080/testEx
```

Old result:
```plain
HTTP/1.1 404 The requested resource could not be found.
...
```

New result:
```plain
HTTP/1.1 404 Not Found
```

* Disolved the redirect method in request.py

Fixes #367

* Updated viur-datastore to 0.8

* Fixed killSessionByUser function

* Fixed files embedded in textbones expiring

* Added support for src-sets in textBones

* Updated requirements, fixed logging

* revert old csp work around and added new extendCsp rules for error pages and google login

* cleaning unnecessary paths

* update requirements

* removed old datastore import

* updated gitignore

* readded path updates

* updated version

* removed github action for auto PyPI automatic release

* added pipenv script shortcuts to build and release on PyPI

* added requirements.txt to package_data

* Provide a get() function for skel.get() as well

* Don't use repr() as fallback for string

This breaks output of skeletons in HTML

* Log higher severity errors raises from bones

Provide a viur.debug.skeleton.fromClient config flag to log debug, which is easier for development.

* Fix: Don't fail when bone_unqiueIndexValue is None

This bug raises when a skeleton was configured to use unique bones while data has previously been written.

* RelSkel.unserialize() should accept dict

This is also stated in the docstring before, but didn't work as subsequent calls access properties not implemented in dict.

* Set x-viur-error in header with exception description

This enables Ajax-requests to access detailed information when something went wrong. This is already implemented in flare, for example.

* Fixes for second factor login in relation to ViUR3

* Fixes and improvements for the tree prototype

* Set content-type to application/json in dumpConfig

* Remove unused parameters from singleValueUnserialize

* Accept single values for multiple=True bones

This...
```python
b = stringBone(multiple=True)

skel[""b""] = ""test""
```
...will write `['t', 'e', 's', 't']` into the bone in the datastore.

This fix will write `[""test""]`, as wanted.

* Allow overriding the fileName under wich a blob will be downloaded

* Update package requirements

* Update package requirements

* fix: removed forgotten resources js, code was embedded with sha to respect CSP

* Revert ""Update package requirements""

This reverts commit bb5addd62e2fada49fabac5d55d29d39b3795a24.

* Added support for new downloadUrl format in textBone

* Replaced original PR by assertion

* Simplified rootNode check condition as discussed

* fixed singleValueUnserialize in selectCountryBone.py

* Set parentnode and parentrepo before fromClient() (#402)

This change sets the readOnly-bones parentnode and parentrepo of a TreeSkel before the fromClient call. The reason for this is, that in a specific use-case, a unique value is build, which may only be unique per repository. This construction was made in a custom fromClient function implemented on the Skeleton, which requires the parentrepo to be known.

* Implement baseSkel for all module prototypes (#378)

* Provide a baseSkel for all prototypes

* Fixing some docstrings and function order.

* Update tree.py

* Update tree.py

* Fixed unique=True on multiple=True relationalBones (#401)

* Fixed unique=True on multiple=True relationalBones

* Removed dupplicate setting of self.multiple

* Feature/viur datastore0.9 (#400)

* Prepared for viur-datastore 0.9

* Added viur-datastore 0.9 hash, removed viur.debug.traceQueries config flag

* Updated changelog to include the information, where traceQueries can now be set

* Fixed deferred calls with _countdown set failing when called from a cronjob (#403)

* selectBone() values accept for list, tuple or callable (#390)

* selectBone() values accept for list, tuple or callable

- list and tuple are converted to dict
- callable allows to obtain values on demand by a callback

* Also recognize ISO3 codes

* Translate list/tuple-based values

* Fixed bug with userSkel.access-bone

This came in with the new selectBone implementation.

* Updated CHANGELOG.md

* Updated requirements.txt (#408)

* Fixed caching module, updated viur-datastore to 1.1 (#407)

* Fixed caching module, updated viur-datastore to 1.1

Replaces #406

* Update core/cache.py

Removed pointless except: raise

Co-authored-by: Sven Eberth <mail@sveneberth.de>

Co-authored-by: Jan Max Meyer <jmm@phorward.de>
Co-authored-by: Sven Eberth <mail@sveneberth.de>

* Fix `setBoneValue` to work with multiple and language bones (#410)

A value via `BaseSkeleton.setBoneValue()` was not setable to
a multiple or language `selectBone` and `stringBone`.
* Extend `baseBone.setBoneValue()` to fix this
* Add `language` parameter in `BaseSkeleton.setBoneValue()`
* Correct default `defaultValue` for multiple and language `selectBone`
* Fix and add several relatet docstrings and type annotations

* bumped viur-datastore to version 1.2.0 (#411)

Co-authored-by: Stefan KÃ¶gl <sk@mausbrand.de>

* Improve SEO url integration (#404)

* Improve SEO url integration

* Correct the type annotation of the `@exposed` decorator
* Eliminate duplicate by calling `list()` instead
* Add docstrings
* Redirect to the current seo-key if the site was opened with an old one

* Use `utils.seoUrlToEntry`

* Accept fetch requests SEC_FETCH_SITE for 'same-site' local dev mode (#415)

Co-authored-by: Stefan KÃ¶gl <sk@mausbrand.de>

* Feature/viur datastore bump to 1.2.1 (#414)

* minor polished version bump for viur-datastore to version 1.2.1

* wtf - now the new hash for viur-datastore is correct

Co-authored-by: Stefan KÃ¶gl <sk@mausbrand.de>

* Fixed randomSliceBone returning no result if limit=1 (#413)

* Sorry - old hash for viur-datastore kept. This change will fix it. (#416)

Co-authored-by: Stefan KÃ¶gl <sk@mausbrand.de>

* Fix buildDBFilter rawFilter condition (#388)

In case `rawFilter[name].lower() == ""none""` and rawFilter[name] is something else than str, ViUR will crash here.

* Updated README.md and CHANGELOG.md

* Assert kwargs are empty on session security key (#417)

This little improvement might help to fix issues when porting from ViUR2 to ViUR3.

* Prepared Release 3.1.0 (#418)

With this release, responsibility for this repository has been transferred to jm@mausbrand.de;
further releases will be authored by him.

Co-authored-by: XeoN-GHMB <32266000+XeoN-GHMB@users.noreply.github.com>
Co-authored-by: Andreas H. Kelch <ak@mausbrand.de>
Co-authored-by: Sven Eberth <mail@sveneberth.de>
Co-authored-by: Jan Max Meyer <jmm@phorward.de>
Co-authored-by: Christos Athanasiadis <ca@mausbrand.de>
Co-authored-by: Stefan KÃ¶gl <stefan.koegl@rub.de>
Co-authored-by: Stefan KÃ¶gl <sk@mausbrand.de>",2022-04-15 11:47:06+02:00,TRUE
5e8f873a57e02ffbe05a425f21f156b1175fc4a7,"Implement unittests (#432)

* fix typo in error message (#429)

a datetime object without a timezone is a naive datetime object, not a native one...

* Updating CHANGELOG

* Implement unittests

* Implement the first unittests which are runable in a mocked enviroment.
* Add a GitHub-Action workflow to automate the test suite execution and
  deploy the coverage html report to a branches for GitHub-Pages

* Minor fixes for baseBone and textBone (#434)

By viur-core 3.1.2, some smaller issues where reported regarding getEmptyValueFunc and textBone, which are:

- Re-enabled getEmptyValueFunc-parameter for baseBone (without mispelling)
- Fixed textBone to be indexed=False by default
- Cleaned up some code in baseBone.__init__()

* Fixated versions for grcpio and grcpio-status

Sorted the dependencies as well.

* Renable test cases after #434

Co-authored-by: xnopasaranx <toe@mausbrand.de>
Co-authored-by: Jan Max Meyer <jmm@phorward.de>",2022-05-13 18:54:51+02:00,FALSE
5499e4c7967bfb3c8fcd27d8a15a70fcefb65837,"Bump version 3.2.0

- Updated README.md
- Updated CHANGELOG.md
- Added CONTRIBUTING.md
- Added PyPI classifiers to setup.cfg",2022-07-22 18:03:52+02:00,TRUE
62ee4e3be4bc1f5c02a9cd5b7f786ecd8e922d4e,Bump version 3.3.3,2023-01-10 18:46:42+01:00,FALSE